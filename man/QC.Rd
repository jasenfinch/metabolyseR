% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/QC.R
\name{QCimpute}
\alias{QCimpute}
\alias{QCimpute,AnalysisData-method}
\alias{QCoccupancy}
\alias{QCoccupancy,AnalysisData-method}
\alias{QCremove}
\alias{QCremove,AnalysisData-method}
\alias{QCrsdFilter}
\alias{QCrsdFilter,AnalysisData-method}
\title{Quality control (QC) sample treatments}
\usage{
QCimpute(
  d,
  cls = "class",
  QCidx = "QC",
  occupancy = 2/3,
  parallel = "variables",
  seed = 1234
)

\S4method{QCimpute}{AnalysisData}(
  d,
  cls = "class",
  QCidx = "QC",
  occupancy = 2/3,
  parallel = "variables",
  seed = 1234
)

QCoccupancy(d, cls = "class", QCidx = "QC", occupancy = 2/3)

\S4method{QCoccupancy}{AnalysisData}(d, cls = "class", QCidx = "QC", occupancy = 2/3)

QCremove(d, cls = "class", QCidx = "QC")

\S4method{QCremove}{AnalysisData}(d, cls = "class", QCidx = "QC")

QCrsdFilter(d, cls = "class", QCidx = "QC", RSDthresh = 0.5)

\S4method{QCrsdFilter}{AnalysisData}(d, cls = "class", QCidx = "QC", RSDthresh = 50)
}
\arguments{
\item{d}{S4 object of class AnalysisData}

\item{cls}{info column to use for class labels}

\item{QCidx}{QC sample label}

\item{occupancy}{occupancy threshold for filtering}

\item{parallel}{parallel type to use. See \code{?missForest} for details}

\item{seed}{random number seed}

\item{RSDthresh}{RSD (\%) threshold for filtering}
}
\value{
An S4 object of class \code{AnalysisData} containing QC treated data.
}
\description{
Quality control (QC) sample pre-treatment methods.
}
\details{
A QC sample is an average pooled sample, equally representative in composition of all the samples present within an experimental set.
Within an analytical run, the QC sample is analysed at equal intervals throughout the run.
If there is class structure within the run, this should be randomised within a block fashion so that the classes are equally represented in each block throughout the run.
A QC sample can then be injected and analysed between these randomised blocks.
This provides a set of technical injections that allows the variability in instrument performance over the run to be accounted for and the robustness of the acquired variables to be assessed.

The technical reproducibility of an acquired variable can be assessed using it's relative standard deviation (RSD) within the QC samples.
The variable RSDs can then be filtered below a threshold value to remove metabolome features that are poorly reproducible across the analytical runs.
This variable filtering strategy has an advantage over that of occupancy alone as it is not dependent on underlying class structure.
Therefore, the variables and variable numbers will not alter if a new class structure is imposed upon the data.
}
\section{Methods}{

\itemize{
\item \code{QCimpute}: Missing value imputation of QC samples.
\item \code{QCoccupancy}: Feature maximum occupancy filtering based on QC samples.
\item \code{QCremove}: Remove QC samples.
\item \code{QCrsdFilter}: Feature filtering based RSD of QC sample features.
}
}

\examples{

## Initial example data preparation
library(metaboData)
d <- analysisData(abr1$neg[,1:1000],abr1$fact)

## Plot the feature RSD distributions of the H class only
d \%>\% 
 keepClasses(cls = 'day',classes = 'H') \%>\% 
 plotRSD(cls = 'day')

## Apply QC feature occupancy filtering and QC feature RSD filtering
QC_treated <- d \%>\% 
 QCoccupancy(cls = 'day',QCidx = 'H',occupancy = 2/3) \%>\%
 QCrsdFilter(cls = 'day',QCidx = 'H',RSDthresh = 50)

print(QC_treated)

## Plot the feature RSD distributions of the H class after QC treatments
QC_treated \%>\% 
 keepClasses(cls = 'day',classes = 'H') \%>\% 
 plotRSD(cls = 'day')
}
