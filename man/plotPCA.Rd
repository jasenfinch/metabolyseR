% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/allGenerics.R, R/plotPCA-method.R
\name{plotPCA}
\alias{plotPCA}
\alias{plotPCA,AnalysisData-method}
\alias{plotPCA,Analysis-method}
\title{plotPCA}
\usage{
plotPCA(
  analysis,
  cls = "class",
  label = NULL,
  scale = TRUE,
  center = TRUE,
  xAxis = "PC1",
  yAxis = "PC2",
  shape = FALSE,
  ellipses = TRUE,
  title = "PCA",
  legendPosition = "bottom",
  labelSize = 2
)

\S4method{plotPCA}{AnalysisData}(
  analysis,
  cls = "class",
  label = NULL,
  scale = TRUE,
  center = TRUE,
  xAxis = "PC1",
  yAxis = "PC2",
  shape = FALSE,
  ellipses = TRUE,
  title = "Principle Component Analysis (PCA)",
  legendPosition = "bottom",
  labelSize = 2
)

\S4method{plotPCA}{Analysis}(
  analysis,
  cls = "class",
  label = NULL,
  scale = TRUE,
  center = TRUE,
  xAxis = "PC1",
  yAxis = "PC2",
  shape = FALSE,
  ellipses = TRUE,
  title = "Principle Component Analysis (PCA)",
  legendPosition = "bottom",
  labelSize = 2
)
}
\arguments{
\item{analysis}{object of class Analysis containing analysis results}

\item{cls}{info column to use for sample labelling}

\item{label}{info column to use for sample labels. Set to NULL for no labels.}

\item{scale}{scale the data}

\item{center}{center the data}

\item{xAxis}{principle component to plot on the x-axis}

\item{yAxis}{principle component to plot on the y-axis}

\item{shape}{TRUE/FALSE use shape aesthetic for plot points. Defaults to TRUE when the number of classes is greater than 12}

\item{ellipses}{TRUE/FALSE, plot multivariate normal distribution 95\% confidence ellipses for each class}

\item{title}{plot title}

\item{legendPosition}{legend position to pass to legend.position argument of \code{ggplot2::theme}. Set to "none" to remove legend.}

\item{labelSize}{label size. Ignored if \code{label} is \code{NULL}}
}
\description{
Plot principle component analysis results of pre-treated data.
}
\examples{
\dontrun{
library(metaboData)
data(abr1)
p <- analysisParameters(c('preTreat'))
p@preTreat <- list(
    occupancyFilter = list(maximum = list()),
    transform = list(TICnorm = list())
)
analysis <- metabolyse(abr1$neg,abr1$fact,p)
plotPCA(analysis,cls = 'day')
}
}
