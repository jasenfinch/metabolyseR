% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/info.R
\name{clsAdd}
\alias{clsAdd}
\alias{clsAdd,AnalysisData-method}
\alias{clsAdd,Analysis-method}
\alias{clsArrange}
\alias{clsArrange,AnalysisData-method}
\alias{clsArrange,Analysis-method}
\alias{clsAvailable}
\alias{clsAvailable,AnalysisData-method}
\alias{clsAvailable,Analysis-method}
\alias{clsExtract}
\alias{clsExtract,AnalysisData-method}
\alias{clsExtract,Analysis-method}
\alias{clsRemove}
\alias{clsRemove,AnalysisData-method}
\alias{clsRemove,Analysis-method}
\alias{clsRename}
\alias{clsRename,AnalysisData-method}
\alias{clsRename,Analysis-method}
\alias{clsReplace}
\alias{clsReplace,AnalysisData-method}
\alias{clsReplace,Analysis-method}
\title{Sample meta information wrangling}
\usage{
clsAdd(d, cls, value, ...)

\S4method{clsAdd}{AnalysisData}(d, cls, value)

\S4method{clsAdd}{Analysis}(d, cls, value, type = c("raw", "pre-treated"))

clsArrange(d, cls = "class", descending = FALSE, ...)

\S4method{clsArrange}{AnalysisData}(d, cls = "class", descending = FALSE)

\S4method{clsArrange}{Analysis}(
  d,
  cls = "class",
  descending = FALSE,
  type = c("raw", "pre-treated")
)

clsAvailable(d, ...)

\S4method{clsAvailable}{AnalysisData}(d)

\S4method{clsAvailable}{Analysis}(d, type = c("raw", "pre-treated"))

clsExtract(d, cls = "class", ...)

\S4method{clsExtract}{AnalysisData}(d, cls = "class")

\S4method{clsExtract}{Analysis}(d, cls = "class", type = c("raw", "pre-treated"))

clsRemove(d, cls, ...)

\S4method{clsRemove}{AnalysisData}(d, cls)

\S4method{clsRemove}{Analysis}(d, cls, type = c("raw", "pre-treated"))

clsRename(d, cls, newName, ...)

\S4method{clsRename}{AnalysisData}(d, cls, newName)

\S4method{clsRename}{Analysis}(d, cls, newName, type = c("raw", "pre-treated"))

clsReplace(d, value, cls = "class", ...)

\S4method{clsReplace}{AnalysisData}(d, value, cls = "class")

\S4method{clsReplace}{Analysis}(d, value, cls = "class", type = c("raw", "pre-treated"))
}
\arguments{
\item{d}{S4 object of class Analysis or AnalysisData}

\item{cls}{sample info column to extract}

\item{value}{vactor of new sample information for replacement}

\item{...}{arguments to pass to specific method}

\item{type}{\code{raw} or \code{pre-treated} sample information}

\item{descending}{TRUE/FALSE, arrange samples in descending order}

\item{newName}{new column name}
}
\description{
Query or alter sample meta information in \code{AnalysisData} or \code{Analysis} class objects.

Replace a given sample info column from an Analysis or
AnalysisData object.
}
\section{Methods}{

\itemize{
\item \code{clsAdd}: Add a sample information column.
\item \code{clsArrange}: Arrange sample row order by a specified sample information column.
\item \code{clsAvailable}: Retrieve the names of the available sample information columns.
\item \code{clsExtract}: Extract the values of a specified sample information column.
\item \code{clsRemove}: Remove a sample information column.
\item \code{clsRename}: Rename a sample information column.
\item \code{clsReplace}: Replace a sample information column.
}
}

\examples{
library(metaboData)
d <- analysisData(abr1$neg,abr1$fact)

## Add a sample information column named 'new'
d <- clsAdd(d,'new',1:nSamples(d))

print(d)

## Arrange the row orders by the 'day' column
d <- clsArrange(d,'day')

clsExtract(d,'day')

## Retreive the available sample information column names
clsAvailable(d)

## Extract the values of the 'day' column
clsExtract(d,'day')

## Remove the 'class' column
d <- clsRemove(d,'class')

clsAvailable(d)

## Rename the 'day' column to 'treatment'
d <- clsRename(d,'day','treatment')

clsAvailable(d)

## Replace the values of the 'treatment' column
d <- clsReplace(d,rep(1,nSamples(d)),'treatment')

clsExtract(d,'treatment')
}
